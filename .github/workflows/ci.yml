name: CI Build and Test

on:
  push:
    branches: [ main, develop, feature/** ]
  pull_request:
    branches: [ main, develop ]

jobs:
  build-and-test-backend:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '9.0.x'
          
      - name: Restore dependencies
        run: dotnet restore
        
      - name: Build
        run: dotnet build --no-restore
        
      - name: Start Cosmos DB Emulator
        uses: southpolesteve/cosmos-emulator-github-action@v1
        
      - name: Test
        run: dotnet test --no-build --verbosity normal --collect:"XPlat Code Coverage"
        env:
          ASPIRE_ALLOW_UNSECURED_TRANSPORT: true
          
      - name: Generate coverage report
        uses: danielpalme/ReportGenerator-GitHub-Action@5.1.19
        with:
          reports: '**/coverage.cobertura.xml'
          targetdir: 'coveragereport'
          reporttypes: 'HtmlInline_AzurePipelines;Cobertura'
          
      - name: Upload coverage report
        uses: actions/upload-artifact@v3
        with:
          name: backend-coverage-report
          path: coveragereport
          
  build-and-test-frontend:
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: 'Frontend/package-lock.json'
          
      - name: Install dependencies
        run: |
          cd Frontend
          npm ci
          
      - name: Create Karma config
        run: |
          cat > Frontend/karma.conf.js << 'EOL'
          module.exports = function (config) {
            config.set({
              basePath: '',
              frameworks: ['jasmine', '@angular-devkit/build-angular'],
              plugins: [
                require('karma-jasmine'),
                require('karma-chrome-launcher'),
                require('karma-jasmine-html-reporter'),
                require('karma-coverage'),
                require('@angular-devkit/build-angular/plugins/karma')
              ],
              client: {
                jasmine: {},
                clearContext: false
              },
              jasmineHtmlReporter: {
                suppressAll: true
              },
              coverageReporter: {
                dir: require('path').join(__dirname, './coverage'),
                subdir: '.',
                reporters: [
                  { type: 'html' },
                  { type: 'text-summary' },
                  { type: 'cobertura' }
                ]
              },
              reporters: ['progress', 'kjhtml'],
              browsers: ['Chrome'],
              restartOnFileChange: true,
              customLaunchers: {
                ChromeHeadlessCI: {
                  base: 'ChromeHeadless',
                  flags: ['--no-sandbox', '--disable-gpu']
                }
              }
            });
          };
          EOL
          
      - name: Build Frontend
        run: |
          cd Frontend
          npm run build
          
      - name: Install Chrome
        uses: browser-actions/setup-chrome@latest
          
      - name: Test Frontend
        run: |
          cd Frontend
          npm test -- --watch=false --no-progress --browsers=ChromeHeadlessCI --karma-config=karma.conf.js
        
      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: frontend-test-results
          path: Frontend/coverage
          
  publish-test-results:
    needs: [build-and-test-backend, build-and-test-frontend]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        
      - name: Display structure of downloaded files
        run: ls -R
        
      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: |
            **/test-results.xml
            **/coverage.cobertura.xml
          
      - name: Create combined test summary
        run: |
          echo "# Test Results Summary" > test-summary.md
          echo "" >> test-summary.md
          echo "## Backend Tests" >> test-summary.md
          echo "- Coverage report available in artifacts" >> test-summary.md
          echo "" >> test-summary.md
          echo "## Frontend Tests" >> test-summary.md
          echo "- Coverage report available in artifacts" >> test-summary.md
          
      - name: Upload test summary
        uses: actions/upload-artifact@v3
        with:
          name: test-summary
          path: test-summary.md
